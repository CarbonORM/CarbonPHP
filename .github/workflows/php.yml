name: CarbonPHP Feature Test Suit

on: [push]

jobs:
  build:
    name: PHP ${{ matrix.php-versions }} Test on ${{ matrix.operating-system }}
    runs-on: ${{matrix.operating-system}}
    container: ${{matrix.container}}
    strategy:
      max-parallel: 4
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ['7.4']
    services:
      mariadb:
        image: mariadb:latest
        ports:
          - 3306
        env:
          MYSQL_USER: admin
          MYSQL_PASSWORD: nimda
          MYSQL_DATABASE: CarbonPHP
          MYSQL_ROOT_PASSWORD: password
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

    steps:
    - name: Set selected color
      run: echo '::set-env name=CI::true'

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
        extensions: mbstring, intl
        ini-values: post_max_size=256M, short_open_tag=On
        coverage: xdebug
        tools: php-cs-fixer, phpunit
      env:
        update: true # specify true or false

    - name: Validate composer.json and composer.lock
      run: composer validate

    # composer with Cache
    - name: Get composer cache directory
      id: composercache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Cache dependencies # https://github.com/marketplace/actions/setup-php-action#matrix-setup
      uses: actions/cache@v2
      with:
        path: ${{ steps.composercache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-suggest

    # node with Cache
    - name: Get node.js cache directory
      id: nodecache
      run: echo "::set-output name=dir::$(npm config get cache)" # Use $(yarn cache dir) for yarn

    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ${{ steps.nodecache.outputs.dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }} # Use '**/yarn.lock' for yarn
        restore-keys: ${{ runner.os }}-node-

    - name: Install JS dependencies
      run: npm install

    # Generate Files
    - name: C6 Composer Setup Scripts
      run: composer setup

    # Double check php version
    - name: PHP version
      run: php --version

    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md
    - name: Run test suite
      run: composer run-script test
