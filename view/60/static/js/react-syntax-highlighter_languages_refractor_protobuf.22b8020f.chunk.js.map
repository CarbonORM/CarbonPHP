{"version":3,"sources":["../../../../node_modules/refractor/lang/protobuf.js"],"names":["protobuf","Prism","builtinTypes","languages","extend","class-name","pattern","lookbehind","keyword","insertBefore","map","alias","inside","punctuation","builtin","positional-class-name","annotation","module","exports","displayName","aliases"],"mappings":"4FAMA,SAAAA,EAAAC,IAGA,SAAAA,GACA,IAAAC,EAAA,4EACAD,EAAAE,UAAAH,SAAAC,EAAAE,UAAAC,OAAA,SACAC,aAAA,CACAC,QAAA,8DACAC,YAAA,GAEAC,QAAA,oIAEAP,EAAAE,UAAAM,aAAA,uBACAC,IAAA,CACAJ,QAAA,6DACAK,MAAA,aACAC,OAAA,CACAC,YAAA,SACAC,QAAAZ,IAGAY,QAAAZ,EACAa,wBAAA,CACAT,QAAA,uEACAK,MAAA,aACAC,OAAA,CACAC,YAAA,OAGAG,WAAA,CACAV,QAAA,8BACAC,YAAA,KA5BA,CA+BGN,GAtCHgB,EAAAC,QAAAlB,EACAA,EAAAmB,YAAA,WACAnB,EAAAoB,QAAA","file":"static/js/react-syntax-highlighter_languages_refractor_protobuf.22b8020f.chunk.js","sourcesContent":["'use strict';\n\nmodule.exports = protobuf;\nprotobuf.displayName = 'protobuf';\nprotobuf.aliases = [];\n\nfunction protobuf(Prism) {\n  ;\n\n  (function (Prism) {\n    var builtinTypes = /\\b(?:double|float|[su]?int(?:32|64)|s?fixed(?:32|64)|bool|string|bytes)\\b/;\n    Prism.languages.protobuf = Prism.languages.extend('clike', {\n      'class-name': {\n        pattern: /(\\b(?:enum|extend|message|service)\\s+)[A-Za-z_]\\w*(?=\\s*\\{)/,\n        lookbehind: true\n      },\n      keyword: /\\b(?:enum|extend|extensions|import|message|oneof|option|optional|package|public|repeated|required|reserved|service|syntax|to)\\b/\n    });\n    Prism.languages.insertBefore('protobuf', 'operator', {\n      map: {\n        pattern: /\\bmap<\\s*[\\w.]+\\s*,\\s*[\\w.]+\\s*>(?=\\s+[A-Za-z_]\\w*\\s*[=;])/,\n        alias: 'class-name',\n        inside: {\n          punctuation: /[<>.,]/,\n          builtin: builtinTypes\n        }\n      },\n      builtin: builtinTypes,\n      'positional-class-name': {\n        pattern: /(?:\\b|\\B\\.)[A-Za-z_]\\w*(?:\\.[A-Za-z_]\\w*)*(?=\\s+[A-Za-z_]\\w*\\s*[=;])/,\n        alias: 'class-name',\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      annotation: {\n        pattern: /(\\[\\s*)[A-Za-z_]\\w*(?=\\s*=)/,\n        lookbehind: true\n      }\n    });\n  })(Prism);\n}"],"sourceRoot":""}