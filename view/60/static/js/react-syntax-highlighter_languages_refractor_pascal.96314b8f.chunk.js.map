{"version":3,"sources":["../../../../node_modules/refractor/lang/pascal.js"],"names":["pascal","Prism","languages","comment","string","pattern","greedy","keyword","lookbehind","number","operator","punctuation","objectpascal","module","exports","displayName","aliases"],"mappings":"2FAMA,SAAAA,EAAAC,GAMAA,EAAAC,UAAAF,OAAA,CACAG,QAAA,mCAA+C,UAC/CC,OAAA,CACAC,QAAA,mDACAC,QAAA,GAEAC,QAAA,EAEAF,QAAA,iTACAG,YAAA,GACK,CAELH,QAAA,+CACAG,YAAA,GACK,CAELH,QAAA,mKACAG,YAAA,GACK,CAELH,QAAA,mhBACAG,YAAA,IAEAC,OAAA,CACA,0BACA,kCACAC,SAAA,kDACAL,QAAA,0EACAG,YAAA,IAEAG,YAAA,0BAEAV,EAAAC,UAAAU,aAAAX,EAAAC,UAAAF,OA1CAa,EAAAC,QAAAd,EACAA,EAAAe,YAAA,SACAf,EAAAgB,QAAA","file":"static/js/react-syntax-highlighter_languages_refractor_pascal.96314b8f.chunk.js","sourcesContent":["'use strict';\n\nmodule.exports = pascal;\npascal.displayName = 'pascal';\npascal.aliases = ['objectpascal'];\n\nfunction pascal(Prism) {\n  // Based on Free Pascal\n\n  /* TODO\n  Support inline asm ?\n  */\n  Prism.languages.pascal = {\n    comment: [/\\(\\*[\\s\\S]+?\\*\\)/, /\\{[\\s\\S]+?\\}/, /\\/\\/.*/],\n    string: {\n      pattern: /(?:'(?:''|[^'\\r\\n])*'|#[&$%]?[a-f\\d]+)+|\\^[a-z]/i,\n      greedy: true\n    },\n    keyword: [{\n      // Turbo Pascal\n      pattern: /(^|[^&])\\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\\b/i,\n      lookbehind: true\n    }, {\n      // Free Pascal\n      pattern: /(^|[^&])\\b(?:dispose|exit|false|new|true)\\b/i,\n      lookbehind: true\n    }, {\n      // Object Pascal\n      pattern: /(^|[^&])\\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\\b/i,\n      lookbehind: true\n    }, {\n      // Modifiers\n      pattern: /(^|[^&])\\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\\b/i,\n      lookbehind: true\n    }],\n    number: [// Hexadecimal, octal and binary\n    /(?:[&%]\\d+|\\$[a-f\\d]+)/i, // Decimal\n    /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?/i],\n    operator: [/\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=]/i, {\n      pattern: /(^|[^&])\\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\\b/,\n      lookbehind: true\n    }],\n    punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.]/\n  };\n  Prism.languages.objectpascal = Prism.languages.pascal;\n}"],"sourceRoot":""}