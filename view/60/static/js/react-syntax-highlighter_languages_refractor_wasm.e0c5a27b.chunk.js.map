{"version":3,"sources":["../../../../node_modules/refractor/lang/wasm.js"],"names":["wasm","Prism","languages","comment","pattern","greedy","string","keyword","inside","operator","punctuation","variable","number","module","exports","displayName","aliases"],"mappings":"4FAMA,SAAAA,EAAAC,GACAA,EAAAC,UAAAF,KAAA,CACAG,QAAA,kBAA2B,CAC3BC,QAAA,OACAC,QAAA,IAEAC,OAAA,CACAF,QAAA,yBACAC,QAAA,GAEAE,QAAA,EACAH,QAAA,sBACAI,OAAA,CACAC,SAAA,MAEK,CACLL,QAAA,ibACAI,OAAA,CACAE,YAAA,OAEK,4QACLC,SAAA,oCACAC,OAAA,kNACAF,YAAA,QA3BAG,EAAAC,QAAAd,EACAA,EAAAe,YAAA,OACAf,EAAAgB,QAAA","file":"static/js/react-syntax-highlighter_languages_refractor_wasm.e0c5a27b.chunk.js","sourcesContent":["'use strict';\n\nmodule.exports = wasm;\nwasm.displayName = 'wasm';\nwasm.aliases = [];\n\nfunction wasm(Prism) {\n  Prism.languages.wasm = {\n    comment: [/\\(;[\\s\\S]*?;\\)/, {\n      pattern: /;;.*/,\n      greedy: true\n    }],\n    string: {\n      pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n      greedy: true\n    },\n    keyword: [{\n      pattern: /\\b(?:align|offset)=/,\n      inside: {\n        operator: /=/\n      }\n    }, {\n      pattern: /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n      inside: {\n        punctuation: /\\./\n      }\n    }, /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/],\n    variable: /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^_`|~]+/i,\n    number: /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n    punctuation: /[()]/\n  };\n}"],"sourceRoot":""}