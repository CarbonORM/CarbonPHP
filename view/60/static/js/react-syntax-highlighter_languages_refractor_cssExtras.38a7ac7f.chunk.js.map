{"version":3,"sources":["../../../../node_modules/refractor/lang/css-extras.js"],"names":["cssExtras","Prism","languages","css","selector","pattern","inside","pseudo-element","pseudo-class","class","id","attribute","greedy","punctuation","case-sensitivity","lookbehind","alias","namespace","value","operator","n-th","number","insertBefore","variable","hexcode","entity","unit","module","exports","displayName","aliases"],"mappings":"2FAMA,SAAAA,EAAAC,GACAA,EAAAC,UAAAC,IAAAC,SAAA,CACAC,QAAAJ,EAAAC,UAAAC,IAAAC,SACAE,OAAA,CACAC,iBAAA,+DACAC,eAAA,UACAC,MAAA,aACAC,GAAA,YACAC,UAAA,CACAN,QAAA,kEACAO,QAAA,EACAN,OAAA,CACAO,YAAA,UACAC,mBAAA,CACAT,QAAA,aACAU,YAAA,EACAC,MAAA,WAEAC,UAAA,CACAZ,QAAA,kCACAU,YAAA,EACAT,OAAA,CACAO,YAAA,QAGAF,UAAA,CACAN,QAAA,0BACAU,YAAA,GAEAG,MAAA,kDACAb,QAAA,kCACAU,YAAA,IAEAI,SAAA,cAGAC,OAAA,EACAf,QAAA,kDACAU,YAAA,EACAT,OAAA,CACAe,OAAA,SACAF,SAAA,SAEO,CACPd,QAAA,gCACAU,YAAA,IAEAF,YAAA,SAGAZ,EAAAC,UAAAoB,aAAA,kBACAC,SAAA,CACAlB,QAAA,8DACAU,YAAA,KAGAd,EAAAC,UAAAoB,aAAA,kBACAH,SAAA,CACAd,QAAA,qBACAU,YAAA,GAEAS,QAAA,iBACAC,OAAA,kBACAC,KAAA,CACArB,QAAA,mBACAU,YAAA,GAEAM,OAAA,aAvEAM,EAAAC,QAAA5B,EACAA,EAAA6B,YAAA,YACA7B,EAAA8B,QAAA","file":"static/js/react-syntax-highlighter_languages_refractor_cssExtras.38a7ac7f.chunk.js","sourcesContent":["'use strict';\n\nmodule.exports = cssExtras;\ncssExtras.displayName = 'cssExtras';\ncssExtras.aliases = [];\n\nfunction cssExtras(Prism) {\n  Prism.languages.css.selector = {\n    pattern: Prism.languages.css.selector,\n    inside: {\n      'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n      'pseudo-class': /:[-\\w]+/,\n      class: /\\.[-:.\\w]+/,\n      id: /#[-:.\\w]+/,\n      attribute: {\n        pattern: /\\[(?:[^[\\]\"']|(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1)*\\]/,\n        greedy: true,\n        inside: {\n          punctuation: /^\\[|\\]$/,\n          'case-sensitivity': {\n            pattern: /(\\s)[si]$/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          namespace: {\n            pattern: /^(\\s*)[-*\\w\\xA0-\\uFFFF]*\\|(?!=)/,\n            lookbehind: true,\n            inside: {\n              punctuation: /\\|$/\n            }\n          },\n          attribute: {\n            pattern: /^(\\s*)[-\\w\\xA0-\\uFFFF]+/,\n            lookbehind: true\n          },\n          value: [/(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/, {\n            pattern: /(=\\s*)[-\\w\\xA0-\\uFFFF]+(?=\\s*$)/,\n            lookbehind: true\n          }],\n          operator: /[|~*^$]?=/\n        }\n      },\n      'n-th': [{\n        pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n        lookbehind: true,\n        inside: {\n          number: /[\\dn]+/,\n          operator: /[+-]/\n        }\n      }, {\n        pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n        lookbehind: true\n      }],\n      punctuation: /[()]/\n    }\n  };\n  Prism.languages.insertBefore('css', 'property', {\n    variable: {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])--[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*/i,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('css', 'function', {\n    operator: {\n      pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n      lookbehind: true\n    },\n    hexcode: /#[\\da-f]{3,8}/i,\n    entity: /\\\\[\\da-f]{1,8}/i,\n    unit: {\n      pattern: /(\\d)(?:%|[a-z]+)/,\n      lookbehind: true\n    },\n    number: /-?[\\d.]+/\n  });\n}"],"sourceRoot":""}