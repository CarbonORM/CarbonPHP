{"version":3,"sources":["../../../../node_modules/refractor/lang/ocaml.js"],"names":["ocaml","Prism","languages","comment","string","pattern","greedy","number","type","alias","directive","keyword","boolean","operator","punctuation","module","exports","displayName","aliases"],"mappings":"2FAMA,SAAAA,EAAAC,GACAA,EAAAC,UAAAF,MAAA,CACAG,QAAA,mBACAC,OAAA,EACAC,QAAA,wBACAC,QAAA,GACK,CACLD,QAAA,qDACAC,QAAA,IAEAC,OAAA,yEACAC,KAAA,CACAH,QAAA,YACAI,MAAA,YAEAC,UAAA,CACAL,QAAA,SACAI,MAAA,YAEAE,QAAA,2RACAC,QAAA,qBAEAC,SAAA,kGACAC,YAAA,oBA3BAC,EAAAC,QAAAhB,EACAA,EAAAiB,YAAA,QACAjB,EAAAkB,QAAA","file":"static/js/react-syntax-highlighter_languages_refractor_ocaml.3b9e527f.chunk.js","sourcesContent":["'use strict';\n\nmodule.exports = ocaml;\nocaml.displayName = 'ocaml';\nocaml.aliases = [];\n\nfunction ocaml(Prism) {\n  Prism.languages.ocaml = {\n    comment: /\\(\\*[\\s\\S]*?\\*\\)/,\n    string: [{\n      pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n      greedy: true\n    }, {\n      pattern: /(['`])(?:\\\\(?:\\d+|x[\\da-f]+|.)|(?!\\1)[^\\\\\\r\\n])\\1/i,\n      greedy: true\n    }],\n    number: /\\b(?:0x[\\da-f][\\da-f_]+|(?:0[bo])?\\d[\\d_]*\\.?[\\d_]*(?:e[+-]?[\\d_]+)?)/i,\n    type: {\n      pattern: /\\B['`]\\w*/,\n      alias: 'variable'\n    },\n    directive: {\n      pattern: /\\B#\\w+/,\n      alias: 'function'\n    },\n    keyword: /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|object|of|open|prefix|private|rec|then|sig|struct|to|try|type|val|value|virtual|where|while|with)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    // Custom operators are allowed\n    operator: /:=|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lxor|lsl|lsr|mod|nor|or)\\b/,\n    punctuation: /[(){}\\[\\]|_.,:;]/\n  };\n}"],"sourceRoot":""}